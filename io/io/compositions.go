// Do not edit this file, it is generated by scripts under the _scripts/ folder

package io

import "github.com/valentinHenry/giog/tuples"

// AndThen2 executes sequentially the 2 IOs and returns the value of the last one.
func AndThen2[T1, T2 any](v1 IO[T1], v2 IO[T2]) IO[T2] {
	return _AndThen2(getTrace(1), v1, v2)
}

// AndThen3 executes sequentially the 3 IOs and returns the value of the last one.
func AndThen3[T1, T2, T3 any](v1 IO[T1], v2 IO[T2], v3 IO[T3]) IO[T3] {
	return _AndThen3(getTrace(1), v1, v2, v3)
}

// AndThen4 executes sequentially the 4 IOs and returns the value of the last one.
func AndThen4[T1, T2, T3, T4 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4]) IO[T4] {
	return _AndThen4(getTrace(1), v1, v2, v3, v4)
}

// AndThen5 executes sequentially the 5 IOs and returns the value of the last one.
func AndThen5[T1, T2, T3, T4, T5 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5]) IO[T5] {
	return _AndThen5(getTrace(1), v1, v2, v3, v4, v5)
}

// AndThen6 executes sequentially the 6 IOs and returns the value of the last one.
func AndThen6[T1, T2, T3, T4, T5, T6 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6]) IO[T6] {
	return _AndThen6(getTrace(1), v1, v2, v3, v4, v5, v6)
}

// AndThen7 executes sequentially the 7 IOs and returns the value of the last one.
func AndThen7[T1, T2, T3, T4, T5, T6, T7 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7]) IO[T7] {
	return _AndThen7(getTrace(1), v1, v2, v3, v4, v5, v6, v7)
}

// AndThen8 executes sequentially the 8 IOs and returns the value of the last one.
func AndThen8[T1, T2, T3, T4, T5, T6, T7, T8 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8]) IO[T8] {
	return _AndThen8(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8)
}

// AndThen9 executes sequentially the 9 IOs and returns the value of the last one.
func AndThen9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9]) IO[T9] {
	return _AndThen9(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9)
}

// AndThen10 executes sequentially the 10 IOs and returns the value of the last one.
func AndThen10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10]) IO[T10] {
	return _AndThen10(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10)
}

// AndThen11 executes sequentially the 11 IOs and returns the value of the last one.
func AndThen11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11]) IO[T11] {
	return _AndThen11(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
}

// AndThen12 executes sequentially the 12 IOs and returns the value of the last one.
func AndThen12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12]) IO[T12] {
	return _AndThen12(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12)
}

// AndThen13 executes sequentially the 13 IOs and returns the value of the last one.
func AndThen13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13]) IO[T13] {
	return _AndThen13(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13)
}

// AndThen14 executes sequentially the 14 IOs and returns the value of the last one.
func AndThen14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14]) IO[T14] {
	return _AndThen14(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14)
}

// AndThen15 executes sequentially the 15 IOs and returns the value of the last one.
func AndThen15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15]) IO[T15] {
	return _AndThen15(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15)
}

// AndThen16 executes sequentially the 16 IOs and returns the value of the last one.
func AndThen16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16]) IO[T16] {
	return _AndThen16(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16)
}

// AndThen17 executes sequentially the 17 IOs and returns the value of the last one.
func AndThen17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17]) IO[T17] {
	return _AndThen17(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17)
}

// AndThen18 executes sequentially the 18 IOs and returns the value of the last one.
func AndThen18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18]) IO[T18] {
	return _AndThen18(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18)
}

// AndThen19 executes sequentially the 19 IOs and returns the value of the last one.
func AndThen19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19]) IO[T19] {
	return _AndThen19(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19)
}

// AndThen20 executes sequentially the 20 IOs and returns the value of the last one.
func AndThen20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20]) IO[T20] {
	return _AndThen20(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20)
}

// AndThen21 executes sequentially the 21 IOs and returns the value of the last one.
func AndThen21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21]) IO[T21] {
	return _AndThen21(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21)
}

// AndThen22 executes sequentially the 22 IOs and returns the value of the last one.
func AndThen22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22]) IO[T22] {
	return _AndThen22(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22)
}

// AndThen23 executes sequentially the 23 IOs and returns the value of the last one.
func AndThen23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23]) IO[T23] {
	return _AndThen23(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23)
}

// AndThen24 executes sequentially the 24 IOs and returns the value of the last one.
func AndThen24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24]) IO[T24] {
	return _AndThen24(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24)
}

// AndThen25 executes sequentially the 25 IOs and returns the value of the last one.
func AndThen25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24], v25 IO[T25]) IO[T25] {
	return _AndThen25(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25)
}

// AndThen26 executes sequentially the 26 IOs and returns the value of the last one.
func AndThen26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24], v25 IO[T25], v26 IO[T26]) IO[T26] {
	return _AndThen26(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26)
}

// AndThen27 executes sequentially the 27 IOs and returns the value of the last one.
func AndThen27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24], v25 IO[T25], v26 IO[T26], v27 IO[T27]) IO[T27] {
	return _AndThen27(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27)
}

// AndThen28 executes sequentially the 28 IOs and returns the value of the last one.
func AndThen28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24], v25 IO[T25], v26 IO[T26], v27 IO[T27], v28 IO[T28]) IO[T28] {
	return _AndThen28(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28)
}

// AndThen29 executes sequentially the 29 IOs and returns the value of the last one.
func AndThen29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24], v25 IO[T25], v26 IO[T26], v27 IO[T27], v28 IO[T28], v29 IO[T29]) IO[T29] {
	return _AndThen29(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29)
}

// AndThen30 executes sequentially the 30 IOs and returns the value of the last one.
func AndThen30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24], v25 IO[T25], v26 IO[T26], v27 IO[T27], v28 IO[T28], v29 IO[T29], v30 IO[T30]) IO[T30] {
	return _AndThen30(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30)
}

//Accumulate2 evaluates sequentially the 2 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate2[T1, T2 any](v1 IO[T1], v2 IO[T2]) IO[tuples.T2[T1, T2]] {
	return _Accumulate2(getTrace(1), v1, v2)
}

//Accumulate3 evaluates sequentially the 3 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate3[T1, T2, T3 any](v1 IO[T1], v2 IO[T2], v3 IO[T3]) IO[tuples.T3[T1, T2, T3]] {
	return _Accumulate3(getTrace(1), v1, v2, v3)
}

//Accumulate4 evaluates sequentially the 4 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate4[T1, T2, T3, T4 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4]) IO[tuples.T4[T1, T2, T3, T4]] {
	return _Accumulate4(getTrace(1), v1, v2, v3, v4)
}

//Accumulate5 evaluates sequentially the 5 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate5[T1, T2, T3, T4, T5 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5]) IO[tuples.T5[T1, T2, T3, T4, T5]] {
	return _Accumulate5(getTrace(1), v1, v2, v3, v4, v5)
}

//Accumulate6 evaluates sequentially the 6 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate6[T1, T2, T3, T4, T5, T6 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6]) IO[tuples.T6[T1, T2, T3, T4, T5, T6]] {
	return _Accumulate6(getTrace(1), v1, v2, v3, v4, v5, v6)
}

//Accumulate7 evaluates sequentially the 7 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate7[T1, T2, T3, T4, T5, T6, T7 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7]) IO[tuples.T7[T1, T2, T3, T4, T5, T6, T7]] {
	return _Accumulate7(getTrace(1), v1, v2, v3, v4, v5, v6, v7)
}

//Accumulate8 evaluates sequentially the 8 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate8[T1, T2, T3, T4, T5, T6, T7, T8 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8]) IO[tuples.T8[T1, T2, T3, T4, T5, T6, T7, T8]] {
	return _Accumulate8(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8)
}

//Accumulate9 evaluates sequentially the 9 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9]) IO[tuples.T9[T1, T2, T3, T4, T5, T6, T7, T8, T9]] {
	return _Accumulate9(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9)
}

//Accumulate10 evaluates sequentially the 10 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10]) IO[tuples.T10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]] {
	return _Accumulate10(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10)
}

//Accumulate11 evaluates sequentially the 11 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11]) IO[tuples.T11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]] {
	return _Accumulate11(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
}

//Accumulate12 evaluates sequentially the 12 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12]) IO[tuples.T12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]] {
	return _Accumulate12(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12)
}

//Accumulate13 evaluates sequentially the 13 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13]) IO[tuples.T13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]] {
	return _Accumulate13(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13)
}

//Accumulate14 evaluates sequentially the 14 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14]) IO[tuples.T14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]] {
	return _Accumulate14(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14)
}

//Accumulate15 evaluates sequentially the 15 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15]) IO[tuples.T15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]] {
	return _Accumulate15(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15)
}

//Accumulate16 evaluates sequentially the 16 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16]) IO[tuples.T16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]] {
	return _Accumulate16(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16)
}

//Accumulate17 evaluates sequentially the 17 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17]) IO[tuples.T17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]] {
	return _Accumulate17(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17)
}

//Accumulate18 evaluates sequentially the 18 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18]) IO[tuples.T18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]] {
	return _Accumulate18(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18)
}

//Accumulate19 evaluates sequentially the 19 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19]) IO[tuples.T19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]] {
	return _Accumulate19(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19)
}

//Accumulate20 evaluates sequentially the 20 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20]) IO[tuples.T20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]] {
	return _Accumulate20(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20)
}

//Accumulate21 evaluates sequentially the 21 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21]) IO[tuples.T21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]] {
	return _Accumulate21(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21)
}

//Accumulate22 evaluates sequentially the 22 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22]) IO[tuples.T22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]] {
	return _Accumulate22(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22)
}

//Accumulate23 evaluates sequentially the 23 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23]) IO[tuples.T23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23]] {
	return _Accumulate23(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23)
}

//Accumulate24 evaluates sequentially the 24 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24]) IO[tuples.T24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24]] {
	return _Accumulate24(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24)
}

//Accumulate25 evaluates sequentially the 25 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24], v25 IO[T25]) IO[tuples.T25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25]] {
	return _Accumulate25(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25)
}

//Accumulate26 evaluates sequentially the 26 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24], v25 IO[T25], v26 IO[T26]) IO[tuples.T26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26]] {
	return _Accumulate26(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26)
}

//Accumulate27 evaluates sequentially the 27 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24], v25 IO[T25], v26 IO[T26], v27 IO[T27]) IO[tuples.T27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27]] {
	return _Accumulate27(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27)
}

//Accumulate28 evaluates sequentially the 28 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24], v25 IO[T25], v26 IO[T26], v27 IO[T27], v28 IO[T28]) IO[tuples.T28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28]] {
	return _Accumulate28(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28)
}

//Accumulate29 evaluates sequentially the 29 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24], v25 IO[T25], v26 IO[T26], v27 IO[T27], v28 IO[T28], v29 IO[T29]) IO[tuples.T29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29]] {
	return _Accumulate29(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29)
}

//Accumulate30 evaluates sequentially the 30 IOs and returns a tuple made of all IOs evaluated values.
func Accumulate30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 any](v1 IO[T1], v2 IO[T2], v3 IO[T3], v4 IO[T4], v5 IO[T5], v6 IO[T6], v7 IO[T7], v8 IO[T8], v9 IO[T9], v10 IO[T10], v11 IO[T11], v12 IO[T12], v13 IO[T13], v14 IO[T14], v15 IO[T15], v16 IO[T16], v17 IO[T17], v18 IO[T18], v19 IO[T19], v20 IO[T20], v21 IO[T21], v22 IO[T22], v23 IO[T23], v24 IO[T24], v25 IO[T25], v26 IO[T26], v27 IO[T27], v28 IO[T28], v29 IO[T29], v30 IO[T30]) IO[tuples.T30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30]] {
	return _Accumulate30(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30)
}

//AccumulateRIO2 evaluates sequentially the 2 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO2[T1, T2 any](v1 RIO[T1], v2 RIO[T2]) RIO[tuples.T2[T1, T2]] {
	return _AccumulateRIO2(getTrace(1), v1, v2)
}

//AccumulateRIO3 evaluates sequentially the 3 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO3[T1, T2, T3 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3]) RIO[tuples.T3[T1, T2, T3]] {
	return _AccumulateRIO3(getTrace(1), v1, v2, v3)
}

//AccumulateRIO4 evaluates sequentially the 4 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO4[T1, T2, T3, T4 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4]) RIO[tuples.T4[T1, T2, T3, T4]] {
	return _AccumulateRIO4(getTrace(1), v1, v2, v3, v4)
}

//AccumulateRIO5 evaluates sequentially the 5 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO5[T1, T2, T3, T4, T5 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5]) RIO[tuples.T5[T1, T2, T3, T4, T5]] {
	return _AccumulateRIO5(getTrace(1), v1, v2, v3, v4, v5)
}

//AccumulateRIO6 evaluates sequentially the 6 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO6[T1, T2, T3, T4, T5, T6 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6]) RIO[tuples.T6[T1, T2, T3, T4, T5, T6]] {
	return _AccumulateRIO6(getTrace(1), v1, v2, v3, v4, v5, v6)
}

//AccumulateRIO7 evaluates sequentially the 7 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO7[T1, T2, T3, T4, T5, T6, T7 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7]) RIO[tuples.T7[T1, T2, T3, T4, T5, T6, T7]] {
	return _AccumulateRIO7(getTrace(1), v1, v2, v3, v4, v5, v6, v7)
}

//AccumulateRIO8 evaluates sequentially the 8 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO8[T1, T2, T3, T4, T5, T6, T7, T8 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8]) RIO[tuples.T8[T1, T2, T3, T4, T5, T6, T7, T8]] {
	return _AccumulateRIO8(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8)
}

//AccumulateRIO9 evaluates sequentially the 9 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9]) RIO[tuples.T9[T1, T2, T3, T4, T5, T6, T7, T8, T9]] {
	return _AccumulateRIO9(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9)
}

//AccumulateRIO10 evaluates sequentially the 10 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10]) RIO[tuples.T10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]] {
	return _AccumulateRIO10(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10)
}

//AccumulateRIO11 evaluates sequentially the 11 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11]) RIO[tuples.T11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]] {
	return _AccumulateRIO11(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
}

//AccumulateRIO12 evaluates sequentially the 12 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12]) RIO[tuples.T12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]] {
	return _AccumulateRIO12(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12)
}

//AccumulateRIO13 evaluates sequentially the 13 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13]) RIO[tuples.T13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]] {
	return _AccumulateRIO13(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13)
}

//AccumulateRIO14 evaluates sequentially the 14 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14]) RIO[tuples.T14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]] {
	return _AccumulateRIO14(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14)
}

//AccumulateRIO15 evaluates sequentially the 15 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15]) RIO[tuples.T15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]] {
	return _AccumulateRIO15(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15)
}

//AccumulateRIO16 evaluates sequentially the 16 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16]) RIO[tuples.T16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]] {
	return _AccumulateRIO16(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16)
}

//AccumulateRIO17 evaluates sequentially the 17 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17]) RIO[tuples.T17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]] {
	return _AccumulateRIO17(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17)
}

//AccumulateRIO18 evaluates sequentially the 18 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18]) RIO[tuples.T18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]] {
	return _AccumulateRIO18(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18)
}

//AccumulateRIO19 evaluates sequentially the 19 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18], v19 RIO[T19]) RIO[tuples.T19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]] {
	return _AccumulateRIO19(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19)
}

//AccumulateRIO20 evaluates sequentially the 20 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18], v19 RIO[T19], v20 RIO[T20]) RIO[tuples.T20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]] {
	return _AccumulateRIO20(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20)
}

//AccumulateRIO21 evaluates sequentially the 21 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18], v19 RIO[T19], v20 RIO[T20], v21 RIO[T21]) RIO[tuples.T21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]] {
	return _AccumulateRIO21(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21)
}

//AccumulateRIO22 evaluates sequentially the 22 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18], v19 RIO[T19], v20 RIO[T20], v21 RIO[T21], v22 RIO[T22]) RIO[tuples.T22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]] {
	return _AccumulateRIO22(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22)
}

//AccumulateRIO23 evaluates sequentially the 23 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18], v19 RIO[T19], v20 RIO[T20], v21 RIO[T21], v22 RIO[T22], v23 RIO[T23]) RIO[tuples.T23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23]] {
	return _AccumulateRIO23(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23)
}

//AccumulateRIO24 evaluates sequentially the 24 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18], v19 RIO[T19], v20 RIO[T20], v21 RIO[T21], v22 RIO[T22], v23 RIO[T23], v24 RIO[T24]) RIO[tuples.T24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24]] {
	return _AccumulateRIO24(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24)
}

//AccumulateRIO25 evaluates sequentially the 25 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18], v19 RIO[T19], v20 RIO[T20], v21 RIO[T21], v22 RIO[T22], v23 RIO[T23], v24 RIO[T24], v25 RIO[T25]) RIO[tuples.T25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25]] {
	return _AccumulateRIO25(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25)
}

//AccumulateRIO26 evaluates sequentially the 26 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18], v19 RIO[T19], v20 RIO[T20], v21 RIO[T21], v22 RIO[T22], v23 RIO[T23], v24 RIO[T24], v25 RIO[T25], v26 RIO[T26]) RIO[tuples.T26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26]] {
	return _AccumulateRIO26(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26)
}

//AccumulateRIO27 evaluates sequentially the 27 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18], v19 RIO[T19], v20 RIO[T20], v21 RIO[T21], v22 RIO[T22], v23 RIO[T23], v24 RIO[T24], v25 RIO[T25], v26 RIO[T26], v27 RIO[T27]) RIO[tuples.T27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27]] {
	return _AccumulateRIO27(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27)
}

//AccumulateRIO28 evaluates sequentially the 28 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18], v19 RIO[T19], v20 RIO[T20], v21 RIO[T21], v22 RIO[T22], v23 RIO[T23], v24 RIO[T24], v25 RIO[T25], v26 RIO[T26], v27 RIO[T27], v28 RIO[T28]) RIO[tuples.T28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28]] {
	return _AccumulateRIO28(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28)
}

//AccumulateRIO29 evaluates sequentially the 29 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18], v19 RIO[T19], v20 RIO[T20], v21 RIO[T21], v22 RIO[T22], v23 RIO[T23], v24 RIO[T24], v25 RIO[T25], v26 RIO[T26], v27 RIO[T27], v28 RIO[T28], v29 RIO[T29]) RIO[tuples.T29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29]] {
	return _AccumulateRIO29(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29)
}

//AccumulateRIO30 evaluates sequentially the 30 RIOs and returns a tuple made of all RIOs evaluated values.
func AccumulateRIO30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 any](v1 RIO[T1], v2 RIO[T2], v3 RIO[T3], v4 RIO[T4], v5 RIO[T5], v6 RIO[T6], v7 RIO[T7], v8 RIO[T8], v9 RIO[T9], v10 RIO[T10], v11 RIO[T11], v12 RIO[T12], v13 RIO[T13], v14 RIO[T14], v15 RIO[T15], v16 RIO[T16], v17 RIO[T17], v18 RIO[T18], v19 RIO[T19], v20 RIO[T20], v21 RIO[T21], v22 RIO[T22], v23 RIO[T23], v24 RIO[T24], v25 RIO[T25], v26 RIO[T26], v27 RIO[T27], v28 RIO[T28], v29 RIO[T29], v30 RIO[T30]) RIO[tuples.T30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30]] {
	return _AccumulateRIO30(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30)
}
func Bind2[T1, T2 any](v1 IO[T1], v2 func(T1) IO[T2]) IO[tuples.T2[T1, T2]] {
	return _Bind2(getTrace(1), v1, v2)
}
func Bind3[T1, T2, T3 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3]) IO[tuples.T3[T1, T2, T3]] {
	return _Bind3(getTrace(1), v1, v2, v3)
}
func Bind4[T1, T2, T3, T4 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4]) IO[tuples.T4[T1, T2, T3, T4]] {
	return _Bind4(getTrace(1), v1, v2, v3, v4)
}
func Bind5[T1, T2, T3, T4, T5 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5]) IO[tuples.T5[T1, T2, T3, T4, T5]] {
	return _Bind5(getTrace(1), v1, v2, v3, v4, v5)
}
func Bind6[T1, T2, T3, T4, T5, T6 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6]) IO[tuples.T6[T1, T2, T3, T4, T5, T6]] {
	return _Bind6(getTrace(1), v1, v2, v3, v4, v5, v6)
}
func Bind7[T1, T2, T3, T4, T5, T6, T7 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7]) IO[tuples.T7[T1, T2, T3, T4, T5, T6, T7]] {
	return _Bind7(getTrace(1), v1, v2, v3, v4, v5, v6, v7)
}
func Bind8[T1, T2, T3, T4, T5, T6, T7, T8 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8]) IO[tuples.T8[T1, T2, T3, T4, T5, T6, T7, T8]] {
	return _Bind8(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8)
}
func Bind9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9]) IO[tuples.T9[T1, T2, T3, T4, T5, T6, T7, T8, T9]] {
	return _Bind9(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9)
}
func Bind10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10]) IO[tuples.T10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]] {
	return _Bind10(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10)
}
func Bind11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11]) IO[tuples.T11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]] {
	return _Bind11(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
}
func Bind12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12]) IO[tuples.T12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]] {
	return _Bind12(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12)
}
func Bind13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13]) IO[tuples.T13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]] {
	return _Bind13(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13)
}
func Bind14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14]) IO[tuples.T14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]] {
	return _Bind14(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14)
}
func Bind15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15]) IO[tuples.T15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]] {
	return _Bind15(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15)
}
func Bind16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16]) IO[tuples.T16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]] {
	return _Bind16(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16)
}
func Bind17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17]) IO[tuples.T17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]] {
	return _Bind17(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17)
}
func Bind18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18]) IO[tuples.T18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]] {
	return _Bind18(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18)
}
func Bind19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19]) IO[tuples.T19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]] {
	return _Bind19(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19)
}
func Bind20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20]) IO[tuples.T20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]] {
	return _Bind20(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20)
}
func Bind21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21]) IO[tuples.T21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]] {
	return _Bind21(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21)
}
func Bind22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22]) IO[tuples.T22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]] {
	return _Bind22(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22)
}
func Bind23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23]) IO[tuples.T23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23]] {
	return _Bind23(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23)
}
func Bind24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24]) IO[tuples.T24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24]] {
	return _Bind24(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24)
}
func Bind25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) IO[T25]) IO[tuples.T25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25]] {
	return _Bind25(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25)
}
func Bind26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) IO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) IO[T26]) IO[tuples.T26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26]] {
	return _Bind26(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26)
}
func Bind27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) IO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) IO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) IO[T27]) IO[tuples.T27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27]] {
	return _Bind27(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27)
}
func Bind28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) IO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) IO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) IO[T27], v28 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27) IO[T28]) IO[tuples.T28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28]] {
	return _Bind28(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28)
}
func Bind29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) IO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) IO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) IO[T27], v28 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27) IO[T28], v29 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28) IO[T29]) IO[tuples.T29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29]] {
	return _Bind29(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29)
}
func Bind30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) IO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) IO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) IO[T27], v28 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27) IO[T28], v29 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28) IO[T29], v30 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29) IO[T30]) IO[tuples.T30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30]] {
	return _Bind30(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30)
}
func BindRIO2[T1, T2 any](v1 RIO[T1], v2 func(T1) RIO[T2]) RIO[tuples.T2[T1, T2]] {
	return _BindRIO2(getTrace(1), v1, v2)
}
func BindRIO3[T1, T2, T3 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3]) RIO[tuples.T3[T1, T2, T3]] {
	return _BindRIO3(getTrace(1), v1, v2, v3)
}
func BindRIO4[T1, T2, T3, T4 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4]) RIO[tuples.T4[T1, T2, T3, T4]] {
	return _BindRIO4(getTrace(1), v1, v2, v3, v4)
}
func BindRIO5[T1, T2, T3, T4, T5 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5]) RIO[tuples.T5[T1, T2, T3, T4, T5]] {
	return _BindRIO5(getTrace(1), v1, v2, v3, v4, v5)
}
func BindRIO6[T1, T2, T3, T4, T5, T6 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6]) RIO[tuples.T6[T1, T2, T3, T4, T5, T6]] {
	return _BindRIO6(getTrace(1), v1, v2, v3, v4, v5, v6)
}
func BindRIO7[T1, T2, T3, T4, T5, T6, T7 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7]) RIO[tuples.T7[T1, T2, T3, T4, T5, T6, T7]] {
	return _BindRIO7(getTrace(1), v1, v2, v3, v4, v5, v6, v7)
}
func BindRIO8[T1, T2, T3, T4, T5, T6, T7, T8 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8]) RIO[tuples.T8[T1, T2, T3, T4, T5, T6, T7, T8]] {
	return _BindRIO8(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8)
}
func BindRIO9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9]) RIO[tuples.T9[T1, T2, T3, T4, T5, T6, T7, T8, T9]] {
	return _BindRIO9(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9)
}
func BindRIO10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10]) RIO[tuples.T10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]] {
	return _BindRIO10(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10)
}
func BindRIO11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11]) RIO[tuples.T11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]] {
	return _BindRIO11(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
}
func BindRIO12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12]) RIO[tuples.T12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]] {
	return _BindRIO12(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12)
}
func BindRIO13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13]) RIO[tuples.T13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]] {
	return _BindRIO13(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13)
}
func BindRIO14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14]) RIO[tuples.T14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]] {
	return _BindRIO14(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14)
}
func BindRIO15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15]) RIO[tuples.T15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]] {
	return _BindRIO15(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15)
}
func BindRIO16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16]) RIO[tuples.T16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]] {
	return _BindRIO16(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16)
}
func BindRIO17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17]) RIO[tuples.T17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]] {
	return _BindRIO17(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17)
}
func BindRIO18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18]) RIO[tuples.T18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]] {
	return _BindRIO18(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18)
}
func BindRIO19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19]) RIO[tuples.T19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]] {
	return _BindRIO19(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19)
}
func BindRIO20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20]) RIO[tuples.T20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]] {
	return _BindRIO20(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20)
}
func BindRIO21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21]) RIO[tuples.T21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]] {
	return _BindRIO21(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21)
}
func BindRIO22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22]) RIO[tuples.T22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]] {
	return _BindRIO22(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22)
}
func BindRIO23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23]) RIO[tuples.T23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23]] {
	return _BindRIO23(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23)
}
func BindRIO24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24]) RIO[tuples.T24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24]] {
	return _BindRIO24(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24)
}
func BindRIO25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) RIO[T25]) RIO[tuples.T25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25]] {
	return _BindRIO25(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25)
}
func BindRIO26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) RIO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) RIO[T26]) RIO[tuples.T26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26]] {
	return _BindRIO26(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26)
}
func BindRIO27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) RIO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) RIO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) RIO[T27]) RIO[tuples.T27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27]] {
	return _BindRIO27(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27)
}
func BindRIO28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) RIO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) RIO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) RIO[T27], v28 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27) RIO[T28]) RIO[tuples.T28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28]] {
	return _BindRIO28(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28)
}
func BindRIO29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) RIO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) RIO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) RIO[T27], v28 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27) RIO[T28], v29 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28) RIO[T29]) RIO[tuples.T29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29]] {
	return _BindRIO29(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29)
}
func BindRIO30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) RIO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) RIO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) RIO[T27], v28 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27) RIO[T28], v29 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28) RIO[T29], v30 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29) RIO[T30]) RIO[tuples.T30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30]] {
	return _BindRIO30(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30)
}
func BindY2[T1, T2 any](v1 IO[T1], v2 func(T1) IO[T2]) IO[T2] {
	return _BindY2(getTrace(1), v1, v2)
}
func BindY3[T1, T2, T3 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3]) IO[T3] {
	return _BindY3(getTrace(1), v1, v2, v3)
}
func BindY4[T1, T2, T3, T4 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4]) IO[T4] {
	return _BindY4(getTrace(1), v1, v2, v3, v4)
}
func BindY5[T1, T2, T3, T4, T5 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5]) IO[T5] {
	return _BindY5(getTrace(1), v1, v2, v3, v4, v5)
}
func BindY6[T1, T2, T3, T4, T5, T6 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6]) IO[T6] {
	return _BindY6(getTrace(1), v1, v2, v3, v4, v5, v6)
}
func BindY7[T1, T2, T3, T4, T5, T6, T7 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7]) IO[T7] {
	return _BindY7(getTrace(1), v1, v2, v3, v4, v5, v6, v7)
}
func BindY8[T1, T2, T3, T4, T5, T6, T7, T8 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8]) IO[T8] {
	return _BindY8(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8)
}
func BindY9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9]) IO[T9] {
	return _BindY9(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9)
}
func BindY10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10]) IO[T10] {
	return _BindY10(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10)
}
func BindY11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11]) IO[T11] {
	return _BindY11(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
}
func BindY12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12]) IO[T12] {
	return _BindY12(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12)
}
func BindY13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13]) IO[T13] {
	return _BindY13(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13)
}
func BindY14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14]) IO[T14] {
	return _BindY14(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14)
}
func BindY15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15]) IO[T15] {
	return _BindY15(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15)
}
func BindY16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16]) IO[T16] {
	return _BindY16(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16)
}
func BindY17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17]) IO[T17] {
	return _BindY17(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17)
}
func BindY18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18]) IO[T18] {
	return _BindY18(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18)
}
func BindY19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19]) IO[T19] {
	return _BindY19(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19)
}
func BindY20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20]) IO[T20] {
	return _BindY20(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20)
}
func BindY21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21]) IO[T21] {
	return _BindY21(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21)
}
func BindY22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22]) IO[T22] {
	return _BindY22(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22)
}
func BindY23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23]) IO[T23] {
	return _BindY23(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23)
}
func BindY24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24]) IO[T24] {
	return _BindY24(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24)
}
func BindY25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) IO[T25]) IO[T25] {
	return _BindY25(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25)
}
func BindY26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) IO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) IO[T26]) IO[T26] {
	return _BindY26(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26)
}
func BindY27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) IO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) IO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) IO[T27]) IO[T27] {
	return _BindY27(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27)
}
func BindY28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) IO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) IO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) IO[T27], v28 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27) IO[T28]) IO[T28] {
	return _BindY28(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28)
}
func BindY29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) IO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) IO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) IO[T27], v28 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27) IO[T28], v29 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28) IO[T29]) IO[T29] {
	return _BindY29(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29)
}
func BindY30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 any](v1 IO[T1], v2 func(T1) IO[T2], v3 func(T1, T2) IO[T3], v4 func(T1, T2, T3) IO[T4], v5 func(T1, T2, T3, T4) IO[T5], v6 func(T1, T2, T3, T4, T5) IO[T6], v7 func(T1, T2, T3, T4, T5, T6) IO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) IO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) IO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) IO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) IO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) IO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) IO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) IO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) IO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) IO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) IO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) IO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) IO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) IO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) IO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) IO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) IO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) IO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) IO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) IO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) IO[T27], v28 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27) IO[T28], v29 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28) IO[T29], v30 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29) IO[T30]) IO[T30] {
	return _BindY30(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30)
}
func BindRIOY2[T1, T2 any](v1 RIO[T1], v2 func(T1) RIO[T2]) RIO[T2] {
	return _BindRIOY2(getTrace(1), v1, v2)
}
func BindRIOY3[T1, T2, T3 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3]) RIO[T3] {
	return _BindRIOY3(getTrace(1), v1, v2, v3)
}
func BindRIOY4[T1, T2, T3, T4 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4]) RIO[T4] {
	return _BindRIOY4(getTrace(1), v1, v2, v3, v4)
}
func BindRIOY5[T1, T2, T3, T4, T5 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5]) RIO[T5] {
	return _BindRIOY5(getTrace(1), v1, v2, v3, v4, v5)
}
func BindRIOY6[T1, T2, T3, T4, T5, T6 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6]) RIO[T6] {
	return _BindRIOY6(getTrace(1), v1, v2, v3, v4, v5, v6)
}
func BindRIOY7[T1, T2, T3, T4, T5, T6, T7 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7]) RIO[T7] {
	return _BindRIOY7(getTrace(1), v1, v2, v3, v4, v5, v6, v7)
}
func BindRIOY8[T1, T2, T3, T4, T5, T6, T7, T8 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8]) RIO[T8] {
	return _BindRIOY8(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8)
}
func BindRIOY9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9]) RIO[T9] {
	return _BindRIOY9(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9)
}
func BindRIOY10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10]) RIO[T10] {
	return _BindRIOY10(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10)
}
func BindRIOY11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11]) RIO[T11] {
	return _BindRIOY11(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
}
func BindRIOY12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12]) RIO[T12] {
	return _BindRIOY12(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12)
}
func BindRIOY13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13]) RIO[T13] {
	return _BindRIOY13(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13)
}
func BindRIOY14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14]) RIO[T14] {
	return _BindRIOY14(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14)
}
func BindRIOY15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15]) RIO[T15] {
	return _BindRIOY15(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15)
}
func BindRIOY16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16]) RIO[T16] {
	return _BindRIOY16(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16)
}
func BindRIOY17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17]) RIO[T17] {
	return _BindRIOY17(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17)
}
func BindRIOY18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18]) RIO[T18] {
	return _BindRIOY18(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18)
}
func BindRIOY19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19]) RIO[T19] {
	return _BindRIOY19(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19)
}
func BindRIOY20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20]) RIO[T20] {
	return _BindRIOY20(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20)
}
func BindRIOY21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21]) RIO[T21] {
	return _BindRIOY21(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21)
}
func BindRIOY22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22]) RIO[T22] {
	return _BindRIOY22(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22)
}
func BindRIOY23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23]) RIO[T23] {
	return _BindRIOY23(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23)
}
func BindRIOY24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24]) RIO[T24] {
	return _BindRIOY24(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24)
}
func BindRIOY25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) RIO[T25]) RIO[T25] {
	return _BindRIOY25(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25)
}
func BindRIOY26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) RIO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) RIO[T26]) RIO[T26] {
	return _BindRIOY26(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26)
}
func BindRIOY27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) RIO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) RIO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) RIO[T27]) RIO[T27] {
	return _BindRIOY27(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27)
}
func BindRIOY28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) RIO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) RIO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) RIO[T27], v28 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27) RIO[T28]) RIO[T28] {
	return _BindRIOY28(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28)
}
func BindRIOY29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) RIO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) RIO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) RIO[T27], v28 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27) RIO[T28], v29 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28) RIO[T29]) RIO[T29] {
	return _BindRIOY29(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29)
}
func BindRIOY30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 any](v1 RIO[T1], v2 func(T1) RIO[T2], v3 func(T1, T2) RIO[T3], v4 func(T1, T2, T3) RIO[T4], v5 func(T1, T2, T3, T4) RIO[T5], v6 func(T1, T2, T3, T4, T5) RIO[T6], v7 func(T1, T2, T3, T4, T5, T6) RIO[T7], v8 func(T1, T2, T3, T4, T5, T6, T7) RIO[T8], v9 func(T1, T2, T3, T4, T5, T6, T7, T8) RIO[T9], v10 func(T1, T2, T3, T4, T5, T6, T7, T8, T9) RIO[T10], v11 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) RIO[T11], v12 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) RIO[T12], v13 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) RIO[T13], v14 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) RIO[T14], v15 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) RIO[T15], v16 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) RIO[T16], v17 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) RIO[T17], v18 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) RIO[T18], v19 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) RIO[T19], v20 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) RIO[T20], v21 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) RIO[T21], v22 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) RIO[T22], v23 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) RIO[T23], v24 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23) RIO[T24], v25 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24) RIO[T25], v26 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25) RIO[T26], v27 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26) RIO[T27], v28 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27) RIO[T28], v29 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28) RIO[T29], v30 func(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29) RIO[T30]) RIO[T30] {
	return _BindRIOY30(getTrace(1), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30)
}

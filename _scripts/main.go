package _scripts

import (
	"fmt"
	iofmt "github.com/valentinHenry/giog/io/fmt"
	"github.com/valentinHenry/giog/io/io"
	"github.com/valentinHenry/giog/io/os"
)

func WriteAll(root string) io.VIO {
	printHeader := func(file *os.File, pckgName string) io.VIO {
		return io.AndThen2(
			iofmt.Fprintln(file, "// Do not edit this file, it is generated by scripts under the _scripts/ folder\n"),
			iofmt.Fprintln(file, "package", pckgName),
		).Void()
	}

	writePipesFile := io.UseRIO(os.Create(fmt.Sprint(root, "pipes/pipes.go")), func(file *os.File) io.VIO {
		return io.AndThen2(
			printHeader(file, "pipes"),
			writePipesFunctions(file, 50),
		)
	})

	writeTuplesFile := io.UseRIO(os.Create(fmt.Sprint(root, "tuples/tuples.go")), func(file *os.File) io.VIO {
		return io.AndThen2(
			printHeader(file, "tuples"),
			writeTuplesFunctions(file, 30),
		)
	})

	writeFunctionsFile := io.UseRIO(os.Create(fmt.Sprint(root, "functions/functions.go")), func(file *os.File) io.VIO {
		return io.AndThen3(
			printHeader(file, "functions"),
			iofmt.Fprintln(file, "import \"github.com/valentinHenry/giog/tuples\""),
			writeFunctionsFunctions(file, 30),
		)
	})

	writeIoCompositionsFile := io.UseRIO(os.Create(fmt.Sprint(root, "io/io/compositions.go")), func(file *os.File) io.VIO {
		return io.AndThen5(
			printHeader(file, "io"),
			iofmt.Fprintln(file, "import \"github.com/valentinHenry/giog/tuples\""),
			writeAndThenFunctions(file, 30),
			writeIoAccumulateFunctions(file, 30),
			writeIoBindFunctions(file, 30),
		)
	})

	writeIoInternalCompositionsFile := io.UseRIO(os.Create(fmt.Sprint(root, "io/io/internal_compositions.go")), func(file *os.File) io.VIO {
		return io.AndThen5(
			printHeader(file, "io"),
			iofmt.Fprintln(file, "import \"github.com/valentinHenry/giog/tuples\""),
			writeInternalAndThenFunctions(file, 30),
			writeInternalIoAccumulateFunctions(file, 30),
			writeInternalIoBindFunctions(file, 30),
		)
	})

	return io.AndThen7(
		iofmt.Println("Starting writing files"),
		writePipesFile,
		writeTuplesFile,
		writeFunctionsFile,
		writeIoCompositionsFile,
		writeIoInternalCompositionsFile,
		iofmt.Println("Done"),
	).Void()
}
